AWSTemplateFormatVersion: "2010-09-09"

Description: CodePipeline resources for the CDM2 project

Parameters:
  ApplicationName:
    Type: String
    Default: cdm2
    Description: Application name used across all stacks

  Environment:
    Type: String
    AllowedValues:
      - sandbox
      - dev
      - test
      - prod
      - sszweda
    Description: The environment tag is used to designate the Environment Stage of the associated AWS resource.

  CodePipelineRoleArn:
    Type: String

  GithubBranchName:
    Type: String

  GithubOrganisationName:
    Type: String

  GithubRepoName:
    Type: String

  SecretStoreName:
    Type: String

Resources:
  ArtifactsBucket:
    Type: 'AWS::S3::Bucket'
    DeletionPolicy: Delete
    Properties:
      BucketName: !Sub "${ApplicationName}-cicd-artifacts-${AWS::Region}-${Environment}"
      AccessControl: Private
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Suspended
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: 'AES256'
            BucketKeyEnabled: true

  ArtifactsBucketsslonly:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ArtifactsBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - 's3:*'
            Effect: Deny
            Resource: !GetAtt ArtifactsBucket.Arn
            Principal: '*'
            Condition:
              StringLike:
                "aws:SecureTransport": "false"


  TemplatesBucket:
    Type: 'AWS::S3::Bucket'
    DeletionPolicy: Delete
    Properties:
      BucketName: !Sub "${ApplicationName}-cicd-templates-${AWS::Region}-${Environment}"
      AccessControl: Private
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Suspended
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: 'AES256'
            BucketKeyEnabled: true

  TemplatesBucketsslonly:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref TemplatesBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - 's3:*'
            Effect: Deny
            Resource: !GetAtt TemplatesBucket.Arn
            Principal: '*'
            Condition:
              StringLike:
                "aws:SecureTransport": "false"


  CloudFormationPipeline:
    Type: "AWS::CodePipeline::Pipeline"
    Properties:
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactsBucket
      Name: !Sub "${ApplicationName}-cicd-pipeline-${AWS::Region}-${Environment}"
      RoleArn: !Ref CodePipelineRoleArn
      Stages:
        - Name: Source
          Actions:
            - Name: cdm2Source
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: "1"
              Configuration:
                Branch: !Ref GithubBranchName
                OAuthToken: !Sub "{{resolve:secretsmanager:${SecretStoreName}:SecretString:token}}"
                Owner: !Ref GithubOrganisationName
                PollForSourceChanges: true
                Repo: !Ref GithubRepoName
              OutputArtifacts:
                - Name: SourceArtifact
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: DeployTemplates
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: S3
                Version: "1"
              Configuration:
                BucketName: !Ref TemplatesBucket
                Extract: true
              InputArtifacts:
                - Name: SourceArtifact
              RunOrder: 1
            - Name: CreateChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                Capabilities: CAPABILITY_AUTO_EXPAND,CAPABILITY_IAM,CAPABILITY_NAMED_IAM
                ChangeSetName: update-stack
                RoleArn: !Sub "arn:aws:iam::${AWS::AccountId}:role/AWSCloudFormationServiceRole"
                StackName: !Sub "${ApplicationName}-masterstack-${AWS::Region}-${Environment}"
                TemplateConfiguration: !Sub "SourceArtifact::config/${Environment}.json"
                TemplatePath: "SourceArtifact::master-stack.yml"
              InputArtifacts:
                - Name: SourceArtifact
              RunOrder: 1
            - Name: Execute
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: update-stack
                StackName: !Sub "${ApplicationName}-masterstack-${AWS::Region}-${Environment}"
              RunOrder: 2

Outputs:
  CodePipelineName:
    Description: CodePipeline Name
    Value: !Ref CloudFormationPipeline
