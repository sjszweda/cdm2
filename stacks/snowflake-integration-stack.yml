AWSTemplateFormatVersion: 2010-09-09
Description: AWS resources needed to integrate Snowflake with S3

Parameters:
  Environment:
    Type: String
    Description: The environment tag is used to designate the Environment Stage of the associated AWS resource.

  CDM2BucketName:
    Type: String
    Description: Name of the S3 Bucket for CDM2

  sfStorageAWSIAMUserARN:
    Type: String
    Description: "STORAGE_AWS_IAM_USER_ARN from Snowflake"
    Default: "arn:aws:iam::407453656878:user/wdvj-s-iest4729"

  sfStorageAWSExternalID:
    Type: String
    Description: "STORAGE_AWS_EXTERNAL_ID from Snowflake (leave as '000' if Snowflake objects do not exist yet)"
    Default: "000"


Resources:
  snowflakeS3Role:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              AWS: !Ref sfStorageAWSIAMUserARN
            Action:
              - "sts:AssumeRole"
            Condition:  {"StringEquals": {"sts:ExternalId": [!Ref sfStorageAWSExternalID]}}
      Description: Cross Account S3 Access for Snowflake
      Path: /
      RoleName: snowflake-s3integration

  snowflakeS3Policy:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: cdm2-snowflake-s3
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - s3:PutObject
              - s3:GetObject
              - s3:GetObjectVersion
              - s3:DeleteObject
              - s3:DeleteObjectVersion
            Resource: !Sub "arn:aws:s3:::${CDM2BucketName}/*"
          - Effect: Allow
            Action:
              - s3:ListBucket
            Resource: !Sub "arn:aws:s3:::${CDM2BucketName}"
      Roles:
        - !Ref snowflakeS3Role
